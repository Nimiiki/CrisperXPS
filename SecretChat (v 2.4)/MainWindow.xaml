<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tb="http://www.hardcodet.net/taskbar" xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"   
        xmlns:modernWPF="http://schemas.modernwpf.com/2019"
        x:Class="SecretChat.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"  Closing="Window_Closing_1"   Activated="Window_Activated_1" Background="Transparent" Deactivated="Window_Deactivated" 
        Loaded="Window_Loaded" MouseEnter="Window_MouseEnter" Initialized="Window_Initialized" 
        >
    <!--<Window.DataContext>
        <Window/>
    </Window.DataContext>-->
    <Window.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Transparent" />
            <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
            <Style x:Key="TransparentButtonEffect" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Transparent" TargetName="Border" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="8"/>
                    </Style>
                </Style.Resources>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{Binding StillFocusedColor}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver"  Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{Binding HoverColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListViewItemHeaderStyle" TargetType="ListViewItem">
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="8"/>
                    </Style>
                </Style.Resources>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="Chat" Background="#FF2D2D30"  >

        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>

        </Grid.RowDefinitions>
        <tb:TaskbarIcon x:Name="SystemTray"
                    Visibility="Hidden"
                    ToolTipText="Secret Chat"
                    IconSource="pack://application:,,,/Resources/SecretChatIcon.ico"
                    MenuActivation="LeftOrRightClick"
                    PopupActivation="DoubleClick" TrayLeftMouseUp="SecretChat_TrayLeftMouseUp" TrayRightMouseUp="SecretChat_TrayRightMouseUp"
      />
        <Rectangle Fill="White"  Grid.Column="9" Grid.ColumnSpan="2" Grid.RowSpan="8" x:Name="RightSideRectangle" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
        <Grid Grid.Column="2" Margin="10,0,0,0" Grid.Row="7" Grid.ColumnSpan="6">
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <TextBox x:Name="chatbox"   SpellCheck.IsEnabled="True" materialDesign:TextFieldAssist.TextFieldCornerRadius="3" Style="{StaticResource MaterialDesignTextBox}" materialDesign:HintAssist.Hint="Nachricht eingeben"  AcceptsReturn="False" Height="Auto"  TextWrapping="Wrap" VerticalAlignment="Center" Background="#FF444448" BorderBrush="{x:Null}" Foreground="White" FontSize="30"  Text=""  SelectionBrush="#FF246FCD" KeyUp="Chatbox_KeyUp" GotKeyboardFocus="Chatbox_GotKeyboardFocus" KeyDown="Chatbox_KeyDown"  />
        </Grid>
        <Button x:Name="EmojiBtn" Grid.Column="10" Grid.Row="7" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Click="EmojiBtn_Click" Background="Transparent" Style="{StaticResource TransparentButtonEffect}">
            <materialDesign:PackIcon x:Name="EmojiBtnIcon" Kind="EmoticonHappyOutline" Width="30" Height="30" Background="Transparent" Foreground="DarkGray" MouseEnter="EmojiBtnIcon_MouseEnter" MouseLeave="EmojiBtnIcon_MouseLeave"/>
        </Button>
        <ListView x:Name="ChannelsList" SelectionMode="Single"  Background="#FF2F3136" Width="300" BorderBrush="Transparent" HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.RowSpan="3"  Foreground="#FFB4B4B4"  Grid.ColumnSpan="2" SelectionChanged="ListView_SelectionChanged_1"   >
            <ListView.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ListView.Resources>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF393C43"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#FF34373C"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListViewItem x:Name="ChannelsListItem" Style="{StaticResource ListViewItemHeaderStyle}">
                <StackPanel Orientation="Horizontal" Width="138" HorizontalAlignment="Left">
                    <!--<Image Source="pack://application:,,,/SecretChat;component/resources/SCIcon.png" Height="30" Width="24" VerticalAlignment="Top"/>-->
                    <Button x:Name="HideShowBtn" materialDesign:ButtonAssist.CornerRadius="5"  BorderBrush="Transparent" Style="{DynamicResource MaterialDesignFlatAccentBgButton}" Content="ˇ"  Background="Transparent" FontSize="15" Height="27" FontWeight="UltraBold" Foreground="#FF6E7178" Click="HideShowBtn_Click" Width="Auto" />
                    <TextBlock  HorizontalAlignment="Left" Height="29" TextWrapping="Wrap" VerticalAlignment="Top" Width="58" Foreground="#FF6E7178" FontSize="16" Text="Kanäle" />
                </StackPanel>
            </ListViewItem>
            <ListViewItem x:Name="GeneralItem" Style="{StaticResource ListViewItemStyle}" Width="181" HorizontalAlignment="Left" IsSelected="True">
                <StackPanel Orientation="Horizontal" Width="124" HorizontalAlignment="Left" Margin="10, 0" Height="23">
                    <Ellipse x:Name="GeneralPoint" Width="10" Height="10" Fill="#FF0078D4" VerticalAlignment="Center" Visibility="Hidden"/>
                    <Rectangle Width="5" Fill="Transparent"/>
                    <materialDesign:PackIcon x:Name="GeneralIcon" Kind="MessageReplyTextOutline" Height="28" Width="27"/>
                    <TextBlock x:Name="General" Text="  Allgemein" FontWeight="Normal"  HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="86"  Background="Transparent" FontSize="15"  Foreground="White">
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <ListViewItem x:Name="Channel1Item" Style="{StaticResource ListViewItemStyle}" Width="235" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" Width="207" HorizontalAlignment="Left">
                    <Ellipse x:Name="Channel1Point" Width="10" Height="10" Fill="#FF0078D4" VerticalAlignment="Center" Visibility="Hidden"/>
                    <Rectangle Width="15" Fill="Transparent"/>
                    <materialDesign:PackIcon x:Name="Channel1Icon" Kind="MessageReplyTextOutline"  Height="28" Width="27"/>
                    <TextBlock x:Name="Channel1" Text="  Verbesserungsideen"  HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="155"  Background="Transparent" FontSize="15"  Foreground="#FF6E7178" >
                    </TextBlock>
                </StackPanel>
            </ListViewItem>
            <ListViewItem x:Name="UpdateInfosItem" Style="{StaticResource ListViewItemStyle}" Width="235" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal" Width="207" HorizontalAlignment="Left">
                    <Ellipse  Width="10" Height="10" Fill="#FF0078D4" VerticalAlignment="Center" Visibility="Hidden"/>
                    <Rectangle Width="15" Fill="Transparent"/>
                    <materialDesign:PackIcon Kind="InformationVariant"  Height="28" Width="27"/>
                    <TextBlock x:Name="UpdateInfos" Text="  Update-Infos"  HorizontalAlignment="Left" Height="27" VerticalAlignment="Top" Width="155"  Background="Transparent" FontSize="15"  Foreground="#FF6E7178" >
                    </TextBlock>
                </StackPanel>
            </ListViewItem>

        </ListView>
        <StackPanel Orientation="Horizontal" Width="138" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Bottom">
            <StackPanel.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </StackPanel.Resources>
            <!--<Image Source="pack://application:,,,/SecretChat;component/resources/SCIcon.png" Height="30" Width="24" VerticalAlignment="Top"/>-->
            <Button x:Name="HideShowBtn2" Style="{DynamicResource MaterialDesignFlatAccentBgButton}"  BorderBrush="Transparent" materialDesign:ButtonAssist.CornerRadius="5" Content="ˇ" Background="Transparent" FontSize="15" Height="27" FontWeight="UltraBold" Foreground="#FF6E7178" Click="HideShowBtn2_Click"  />
            <TextBlock  HorizontalAlignment="Left" Height="29" TextWrapping="Wrap" VerticalAlignment="Top" Width="113" Foreground="#FF6E7178" FontSize="16" Text="Freunde" />
        </StackPanel>
        <ListView x:Name="Friendslist"  AllowDrop="True"   Background="#FF2F3136" Width="300" BorderBrush="Transparent" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Stretch" Grid.RowSpan="2"  Foreground="#FFB4B4B4"  Grid.ColumnSpan="2" SelectionMode="Single"  SelectionChanged="Friendslist_SelectionChanged" LostFocus="Friendslist_LostFocus">
            <ListView.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ListView.Resources>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{Binding StillFocusedColor}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{Binding HoverColor}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate >
                <DataTemplate>
                    <ListViewItem IsHitTestVisible="False">
                        <StackPanel Orientation="Horizontal"   Width="250" HorizontalAlignment="Left" Margin="10, 0" Height="25">
                            <Ellipse x:Name="FriendMessage" Width="10" Height="10" Fill="#FF0078D4" VerticalAlignment="Center" Visibility="{Binding PointVisibility}"/>
                            <Rectangle Width="5" Fill="Transparent"/>
                            <Ellipse Width="25" Height="25" VerticalAlignment="Top">
                                <Ellipse.Fill>
                                    <ImageBrush x:Name="pictureBox"  ImageSource="{Binding User.Picture, Mode = OneWay}" Stretch="UniformToFill" />
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock x:Name="FriendName" Text="{Binding Friend}" Margin="6,0" FontWeight="{Binding TextWeight}"  HorizontalAlignment="Left" Height="27" VerticalAlignment="Top"   Background="Transparent" FontSize="15"  Foreground="{Binding TextColor}">
                            </TextBlock>
                        </StackPanel>
                    </ListViewItem>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
        <ListView x:Name="UpdateInfoList" Visibility="Collapsed" Width="Auto"  HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto"  Background="{x:Null}" Foreground="White" FontWeight="DemiBold" BorderBrush="{x:Null}" Grid.RowSpan="7" Grid.ColumnSpan="7"  Margin="0,0,0,33.571" FontSize="18" ScrollViewer.ScrollChanged="DtGrid_ScrollChanged" SelectionChanged="List_SelectionChanged" LostFocus="List_LostFocus" Grid.Column="2"   >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListView>
        <ListView x:Name="list"  HorizontalAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  Background="{x:Null}" Foreground="LightGray" BorderBrush="{x:Null}" Grid.RowSpan="7" Grid.ColumnSpan="7"  Margin="0,0,0,33.571" FontSize="18"  ScrollViewer.ScrollChanged="DtGrid_ScrollChanged" SelectionChanged="List_SelectionChanged" LostFocus="List_LostFocus" Grid.Column="2"   >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Visibility="{Binding MessageOrInfo}">
                            <StackPanel>
                                <Ellipse Width="45" Height="45" VerticalAlignment="Bottom">
                                    <Ellipse.Fill>
                                        <ImageBrush x:Name="pictureBox"  ImageSource="{Binding User.Picture, Mode = OneWay}" Stretch="UniformToFill" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </StackPanel>
                            <Rectangle Width="10" Fill="Transparent" Visibility="{Binding MessageOrInfo}"/>
                            <TextBlock x:Name="From"  VerticalAlignment="Center" HorizontalAlignment="Left"  Visibility="{Binding MessageOrInfo}"  Height="Auto" Width="Auto" Text="{Binding Friend}"  Background="Transparent" Foreground="{Binding TextColor}" FontWeight="Bold" />
                            <Rectangle Width="10" Fill="Transparent"  Visibility="{Binding MessageOrInfo}"/>
                            <TextBlock x:Name="Time"  VerticalAlignment="Center" HorizontalAlignment="Left"  Visibility="{Binding MessageOrInfo}"  Height="Auto"  FontSize="15" Width="Auto" Text="{Binding TimeString}"   Background="Transparent" Foreground="Gray"  />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Width="950">
                            <Rectangle Width="55" Fill="Transparent" />
                            <emoji:TextBlock x:Name="MessageBlockMessage"  TextAlignment="{Binding LeftOrCenter}"   Height="Auto"  Text="{Binding Message}" MaxWidth="630" TextWrapping="Wrap" Background="Transparent" Foreground="{Binding TextColor2}" TextDecorations="{Binding UnderlinedOrNot}" >
                            </emoji:TextBlock>
                            <Image x:Name="Emote"  Height="45" Width="45" Source="{Binding EmoteSource}" Visibility="{Binding EmoteVisibility}"></Image>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
        <ListView x:Name="Channel1List"  HorizontalAlignment="Stretch" Background="{x:Null}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.ScrollChanged="Channel1List_ScrollChanged"  Foreground="LightGray" BorderBrush="{x:Null}" Grid.RowSpan="7" Grid.ColumnSpan="8"  Margin="0,0,200,0" FontSize="18"   SelectionChanged="Channel1List_SelectionChanged" Grid.Column="2">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="0, 0">
                        <StackPanel Orientation="Horizontal" Visibility="{Binding MessageOrInfo}">
                            <StackPanel>
                                <Ellipse Width="45" Height="45" VerticalAlignment="Bottom">
                                    <Ellipse.Fill>
                                        <ImageBrush x:Name="pictureBox"  ImageSource="{Binding User.Picture, Mode = OneWay}" Stretch="UniformToFill" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </StackPanel>
                            <Rectangle Width="10" Fill="Transparent" Visibility="{Binding MessageOrInfo}"/>
                            <TextBlock x:Name="From"  VerticalAlignment="Center" HorizontalAlignment="Left"  Visibility="{Binding MessageOrInfo}"  Height="Auto" Width="Auto" Text="{Binding Friend}"  Background="Transparent" Foreground="{Binding TextColor}" FontWeight="Bold" />
                            <Rectangle Width="10" Fill="Transparent"  Visibility="{Binding MessageOrInfo}"/>
                            <TextBlock x:Name="Time"  VerticalAlignment="Center" HorizontalAlignment="Left"  Visibility="{Binding MessageOrInfo}"  Height="Auto"  FontSize="15" Width="Auto" Text="{Binding TimeString}"   Background="Transparent" Foreground="Gray"  />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Width="950">
                            <Rectangle Width="55" Fill="Transparent" />
                            <emoji:TextBlock x:Name="MessageBlockMessage"  TextAlignment="{Binding LeftOrCenter}"   Height="Auto"  Text="{Binding Message}" MaxWidth="630" TextWrapping="Wrap" Background="Transparent" Foreground="{Binding TextColor2}" TextDecorations="{Binding UnderlinedOrNot}" >
                            </emoji:TextBlock>
                            <Image x:Name="Emote"  Height="45" Width="45" Source="{Binding EmoteSource}" Visibility="{Binding EmoteVisibility}"></Image>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
        <StackPanel x:Name="InfoBar" Visibility="Collapsed" Orientation="Horizontal"  Grid.ColumnSpan="7" Grid.Row="0" Background="Transparent" Grid.Column="2" Margin="5,0">

            <StackPanel  Grid.ColumnSpan="7" Grid.Column="2">
                <StackPanel Orientation="Horizontal"  Panel.ZIndex="1" Margin="0,0,0,10">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <Button x:Name="InfoBtn" Visibility="Visible"  Style="{DynamicResource MaterialDesignRaisedDarkButton}" materialDesign:ButtonAssist.CornerRadius="10" Background="Transparent" Margin="0,0,0,0" Width="Auto" Height="40" BorderThickness="0" Click="InfoBtn_Click">
                        <Button.Content>
                            <TextBlock Background="Transparent" Text="         " x:Name="FriendName"  Foreground="White" FontSize="25"/>
                            <!--<materialDesign:PackIcon Kind="InfoCircleOutline" Background="Transparent" Height="24" Width="24" Foreground="DarkGray"/>-->
                        </Button.Content>
                    </Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal"  Background="Transparent" Grid.ColumnSpan="7" Grid.Row="0"  Grid.Column="2" Margin="15,0">
                    <TextBlock x:Name="FriendStatus" Background="Transparent" Text="" Foreground="Gray" Panel.ZIndex="1"  FontSize="17"   />
                </StackPanel>
                <Separator Grid.Column="2" Grid.ColumnSpan="7" Width="1400" HorizontalAlignment="Stretch"  Margin="0,0" Panel.ZIndex="2" Background="DarkSlateGray"/>
            </StackPanel>
        </StackPanel>
        <ListView x:Name="FriendChat" ScrollViewer.ScrollChanged="FriendChat_ScrollChanged" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch" Background="{x:Null}"  Foreground="LightGray" BorderBrush="{x:Null}" Grid.RowSpan="7" Grid.ColumnSpan="7" Visibility="{Binding ChatVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Margin="0,78,0,33" FontSize="18"   Grid.Column="2" SelectionChanged="FriendChat_SelectionChanged"    >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="0, 0">
                        <StackPanel Orientation="Horizontal" Visibility="{Binding MessageOrInfo}">
                            <StackPanel>
                                <Ellipse Width="45" Height="45" VerticalAlignment="Bottom">
                                    <Ellipse.Fill>
                                        <ImageBrush x:Name="pictureBox"  ImageSource="{Binding User.Picture, Mode = OneWay}" Stretch="UniformToFill" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </StackPanel>
                            <Rectangle Width="10" Fill="Transparent" Visibility="{Binding MessageOrInfo}"/>
                            <TextBlock x:Name="From"  VerticalAlignment="Center" HorizontalAlignment="Left"  Visibility="{Binding MessageOrInfo}"  Height="Auto" Width="Auto" Text="{Binding Friend}"  Background="Transparent" Foreground="{Binding TextColor}" FontWeight="Bold" />
                            <Rectangle Width="10" Fill="Transparent"  Visibility="{Binding MessageOrInfo}"/>
                            <TextBlock x:Name="Time"  VerticalAlignment="Center" HorizontalAlignment="Left"  Visibility="{Binding MessageOrInfo}"  Height="Auto"  FontSize="15" Width="Auto" Text="{Binding TimeString}"   Background="Transparent" Foreground="Gray"  />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Width="950">
                            <Rectangle Width="55" Fill="Transparent" />
                            <emoji:TextBlock x:Name="MessageBlockMessage"  TextAlignment="{Binding LeftOrCenter}"   Height="Auto"  Text="{Binding Message}" MaxWidth="630" TextWrapping="Wrap" Background="Transparent" Foreground="{Binding TextColor2}" TextDecorations="{Binding UnderlinedOrNot}" >
                            </emoji:TextBlock>
                            <Image x:Name="Emote"  Height="45" Width="45" Source="{Binding EmoteSource}" Visibility="{Binding EmoteVisibility}"></Image>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
        <!--<TextBox x:Name="defaultChatboxText" Text="Nachricht eingeben"  SpellCheck.IsEnabled="True" FontSize="23" VerticalAlignment="Center" Panel.ZIndex="1" Grid.ColumnSpan="7" Grid.Row="7" BorderThickness="0" Foreground="#FF898989"  Background="{x:Null}" BorderBrush="{x:Null}" SelectionBrush="{x:Null}" Height="42" GotKeyboardFocus="DefaultChatboxText_GotKeyboardFocus" Grid.Column="2" Margin="0.2,5.429,71.6,5.371">

        </TextBox>-->
        <Button x:Name="sendButton" ToolTip="Nachricht senden."  Click="Button_Click" Grid.Column="8"  Grid.Row="7" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FF014EE7" FontSize="38" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ColumnSpan="1" Visibility="Hidden" Style="{StaticResource TransparentButtonEffect}" >
            <Image x:Name="sendButtonImage" Height="42" Source="pack://application:,,,/SecretChat;component/resources/send message.png" Stretch="Fill" Width="46"/>
        </Button>

        <ListView x:Name="Typing"  Grid.ColumnSpan="8" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" SelectionChanged="ListView_SelectionChanged"  HorizontalAlignment="Stretch" BorderThickness="0.5" Height="31" VerticalAlignment="Bottom" Background="{x:Null}" Foreground="#FFB4B2B2" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Grid.Row="6" Grid.Column="2" Margin="0,0,71.6,0">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate >
                <DataTemplate >
                    <Grid Margin="0,2 ">
                        <StackPanel Orientation="Horizontal" Visibility="{Binding Visibility}">
                            <TextBlock Text="{Binding userName}" Background="{x:Null}" Foreground="LightGray" FontSize="18" />
                            <TextBlock Text=" schreibt"  Background="{x:Null}" Foreground="LightGray" FontSize="18" />
                            <TextBlock Text=" ."  Background="{x:Null}" Foreground="LightGray" FontSize="18" FontWeight="{Binding Dot1Font}"  />
                            <TextBlock  Text=" ."  Background="{x:Null}" Foreground="LightGray" FontSize="18" FontWeight="{Binding Dot2Font}" />
                            <TextBlock Text=" ."   Background="{x:Null}" Foreground="LightGray" FontSize="18" FontWeight="{Binding Dot3Font}" />
                            <TextBlock  Background="{x:Null}" Width="50" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListView>
        <Button x:Name="settings" ToolTip="Einstellungen öffnen." Grid.Column="10" HorizontalAlignment="Right" Height="51" VerticalAlignment="Top" Width="55" Click="Settings_Click" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
            <Image x:Name="SettingsImage" Height="40" Source="pack://application:,,,/SecretChat;component/resources/Settings.png" Stretch="Fill" Width="40"/>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF333337" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{Binding HoverColor}" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Canvas x:Name="UserStatusGrid" Grid.ColumnSpan="2" Grid.Column="9" HorizontalAlignment="Center" Height="366" Margin="20.8,2,-0.4,0" Grid.RowSpan="7" VerticalAlignment="Top" Width="178">
            <Border BorderThickness="1" BorderBrush="#FF88FF69" CornerRadius="10, 10,0, 0" Width="169" Height="40" Canvas.Top="51" Canvas.Left="9" Background="#FFA0DF90">
                <TextBlock HorizontalAlignment="Center"   ToolTip="Aktuell aktive Benutzer." TextAlignment="Center"  Height="25" TextWrapping="Wrap" VerticalAlignment="Center" Width="169" FontSize="20"  FontWeight="Bold" Background="{x:Null}" Text="Aktiv:"  Foreground="Black"/>
            </Border>
            <ListView x:Name="OnlineUsers" ScrollViewer.HorizontalScrollBarVisibility="Hidden"  BorderThickness="2" BorderBrush="#FFA0DF90"  HorizontalAlignment="Right" Height="Auto" MinHeight="150" MaxHeight="170" VerticalAlignment="Top" Background="{x:Null}" Foreground="#FFE0E0E0"   Width="169" Canvas.Left="9" Canvas.Top="90">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <Ellipse Width="33" Height="33" VerticalAlignment="Top">
                                    <Ellipse.Fill>
                                        <ImageBrush x:Name="picture"  ImageSource="{Binding User.Picture, Mode = OneWay}"  Stretch="UniformToFill" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Rectangle Width="6" Fill="Transparent"/>
                                <TextBlock Text="{Binding userName}" Background="{x:Null}" Foreground="{Binding TextColor}" Width="130" FontSize="20" TextWrapping="Wrap" VerticalAlignment="Top"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListView>
            <Border BorderThickness="1" BorderBrush="#FFED8542" Panel.ZIndex="1" VerticalAlignment="Bottom"  CornerRadius="10, 10,0, 0" Height="40" Width="169" Canvas.Top="265" Canvas.Left="9" Background="#FFF19D67">
                <TextBlock HorizontalAlignment="Center" ToolTip="Aktuelle inaktive Benutzer, bei denen Secret Chat® im Hintergrund läuft."  Height="24"  VerticalAlignment="Center" Width="168" FontSize="20" TextAlignment="Center"  FontWeight="Bold" Background="{x:Null}" Text="Abwesend:"  Foreground="Black" />
            </Border>
            <ListView x:Name="AbsentUsers" ScrollViewer.HorizontalScrollBarVisibility="Hidden"  HorizontalAlignment="Stretch"  BorderThickness="2" Height="Auto" MaxHeight="285" MinHeight="150" VerticalAlignment="Bottom" Background="{x:Null}" Foreground="#FFE0E0E0" BorderBrush="#FFED8542" Canvas.Left="9" Width="169" Canvas.Top="303">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <Ellipse Width="33" Height="33" VerticalAlignment="Top">
                                    <Ellipse.Fill>
                                        <ImageBrush x:Name="pictureAbsent2"  ImageSource="{Binding AbsentUser.Picture, Mode = OneWay}" Stretch="UniformToFill" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Rectangle Width="6" Fill="Transparent"/>
                                <TextBlock Text="{Binding userName}" Background="{x:Null}" Foreground="{Binding TextColor}" Width="130" FontSize="20" TextWrapping="Wrap" VerticalAlignment="Top"/>
                            </StackPanel>
                            <!--<ProgressBar Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Completion}" />-->
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListView>
        </Canvas>
        <Grid x:Name="AddFriendGrid" Background="#FF2F3136" Height="142" VerticalAlignment="Bottom" Margin="10,0" HorizontalAlignment="Left"  Grid.RowSpan="2" Grid.Row="6"  Grid.ColumnSpan="2" >
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <Button Content="Freund hinzufügen" x:Name="AddFriendBtn"  materialDesign:ButtonAssist.CornerRadius="3" VerticalAlignment="Top"  Height="27" Style="{DynamicResource MaterialDesignRaisedDarkButton}" FontSize="15" HorizontalAlignment="Left" FontWeight="Bold" Width="180" Foreground="#FFF1F1F1" BorderBrush="#FF2B76B4" Background="#FF2B76B4" Click="Button_Click_2"/>
            <StackPanel Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <TextBox materialDesign:HintAssist.Hint="Benutzername"  Visibility="Collapsed" FontSize="17" Style="{StaticResource MaterialDesignFloatingHintTextBox}" x:Name="FriendNameBox" BorderThickness="2.5"  TextWrapping="Wrap" Height="45" Width="130"   Background="#FF2D2D30" BorderBrush="#FF4C4C4F" Foreground="White"  TextAlignment="Left"
  materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
  materialDesign:HintAssist.FloatingScale="0.3" CaretBrush="#FF1B6DD8"  >
                    </TextBox>
                    <Button x:Name="VerifyAddFriend" Visibility="Collapsed"  Style="{DynamicResource MaterialDesignRaisedDarkButton}" FontSize="20"   Width="56" Height="47" Foreground="#FFF1F1F1" BorderBrush="Transparent" Background="#FF2B76B4" Click="VerifyAddFriend_Click" >
                        <Button.Content>
                            <materialDesign:PackIcon x:Name="AccountIcon" Kind="AccountPlus" Height="25" Width="25" Foreground="White"/>
                        </Button.Content>
                    </Button>
                </StackPanel>
                <Button x:Name="CancelBtn" Visibility="Collapsed" VerticalAlignment="Top" Style="{StaticResource MaterialDesignFlatButton}" Content="Abbrechen" Width="130" FontSize="12" Click="CancelBtn_Click" />
            </StackPanel>
        </Grid>
        <Grid x:Name="NameAndPictureGrid" Background="#FF292B2F" Height="70"   HorizontalAlignment="Left"  VerticalAlignment="Bottom" Grid.RowSpan="1" Grid.Row="7" Width="300" Panel.ZIndex="3" Grid.ColumnSpan="2" >
            <StackPanel Orientation="Horizontal">
                <Ellipse Width="40" Height="40" VerticalAlignment="Bottom" Margin="0,8">
                    <Ellipse.Fill>
                        <ImageBrush x:Name="picture" Stretch="Fill" />
                    </Ellipse.Fill>
                </Ellipse>
                <Rectangle Width="10" Fill="Transparent"/>
                <TextBlock x:Name="NameBlock" Text="" Background="{x:Null}" Width="Auto"  FontSize="17" TextWrapping="Wrap" VerticalAlignment="Bottom" Foreground="White" Height="40"/>
            </StackPanel>
        </Grid>
        <Grid x:Name="NewMessagesGrid" Grid.Column="9" HorizontalAlignment="Left" Visibility="Hidden"  Grid.Row="7" VerticalAlignment="Center"  Grid.ColumnSpan="2" Margin="57.,3.429,-0.4,2.371" Width="87">
            <Button x:Name="NewMessagesbutton" ToolTip="Nach unten scrollen." Panel.ZIndex="2" HorizontalAlignment="Left" Width="91" Click="Button_Click_1" FontSize="35" FontWeight="Bold" Background="{x:Null}" Foreground="#FFFF5301" BorderBrush="{x:Null}">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent" TargetName="Border" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
                <Image x:Name="NewMsgImg" Height="40" Source="pack://application:,,,/SecretChat;component/resources/newmsgbtn.png" Stretch="Fill" Width="37"/>
            </Button>
            <TextBlock x:Name="NotificationAmount" Panel.ZIndex="1" Text="" Margin="60,25,16,4" Foreground="White" FontWeight="Bold" FontSize="14" TextAlignment="Center"/>
            <Ellipse Fill="OrangeRed" HorizontalAlignment="Left" Height="19" Margin="57,26,0,0" Stroke="White" VerticalAlignment="Top" Width="19" StrokeThickness="0.2"/>
        </Grid>
        <Rectangle x:Name="OverlayRectangle" Grid.ColumnSpan="2" Width="300" HorizontalAlignment="Left" VerticalAlignment="Stretch" Fill="#FF2F3136" Grid.RowSpan="8"  Panel.ZIndex="-1">
        </Rectangle>
        <Grid x:Name="SettingsGrid" Panel.ZIndex="3" Background="#F92D2D30" Grid.ColumnSpan="11" Grid.RowSpan="8" Visibility="Collapsed"
              >
            <Grid.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="Grey" SecondaryColor="DeepPurple" />
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.Effect>
                <DropShadowEffect RenderingBias="Quality" Direction="315" ShadowDepth="1" BlurRadius="4" FrameworkElement.FlowDirection="RightToLeft"/>
            </Grid.Effect>
            <!--<Button HorizontalAlignment="Left" Height="63" Margin="726,10,0,0" VerticalAlignment="Top" Width="64" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Button_Click">
            <Image Source="Image3.png" Stretch="Fill" Height="64" Width="64"/>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF2D2D30" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF333337" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>-->
            <Button x:Name="GoBackBtn" Panel.ZIndex="1" Content="←" HorizontalAlignment="Left" VerticalAlignment="Top" Height="100" Margin="0, -35"  Click="GoBackBtn_Click" ToolTip="Zurück" Background="{x:Null}" FontSize="90" BorderBrush="{x:Null}" Foreground="#FFCACACA" FontWeight="Bold">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#FF333337" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding HoverColor}" TargetName="Border" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
            <Rectangle x:Name="RectangleOverlay" Fill="#FF2F3136" Grid.ColumnSpan="3" Grid.RowSpan="8" HorizontalAlignment="Left" Width="260" />
            <ListView x:Name="SettingsMenuList"  BorderBrush="Transparent" SelectionMode="Single" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Left" Margin="10,90" VerticalAlignment="Top" Grid.RowSpan="8"  Foreground="#FFB4B4B4" Grid.Column="0"  Grid.ColumnSpan="3" Width="250" SelectionChanged="SettingsMenuList_SelectionChanged"   >
                <ListView.Resources>
                    <ResourceDictionary>
                        <ResourceDictionary.MergedDictionaries>
                            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                            <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                        </ResourceDictionary.MergedDictionaries>
                    </ResourceDictionary>
                </ListView.Resources>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FF393C43"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="#FF34373C"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListViewItem  Style="{StaticResource ListViewItemStyle}" Width="Auto" HorizontalAlignment="Left" IsEnabled="False">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10, 0" Height="Auto">
                        <TextBlock x:Name="EinstellungenText" HorizontalAlignment="Left" Height="24" TextWrapping="Wrap" Text="BENUTZEREINSTELLUNGEN" VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="15"/>
                    </StackPanel>
                </ListViewItem>
                <ListViewItem x:Name="MyAccountItem" Style="{StaticResource ListViewItemStyle}" Width="Auto" Margin="0,30,0,0" HorizontalAlignment="Left" IsSelected="True">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10, 0" Height="35">
                        <materialDesign:PackIcon Kind="Account" Height="30" Width="30" VerticalAlignment="Top"/>
                        <TextBlock  Text="Mein Account         " FontWeight="Normal"  HorizontalAlignment="Left"  VerticalAlignment="Top" Width="Auto" Margin="5,0" Background="Transparent" FontSize="20"  Foreground="White">
                        </TextBlock>
                    </StackPanel>
                </ListViewItem>
                <ListViewItem x:Name="PersonalizationItem" Style="{StaticResource ListViewItemStyle}" Width="Auto" Margin="0,30,0,0" HorizontalAlignment="Left" >
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" Margin="10, 0" Height="35">
                        <materialDesign:PackIcon Kind="AccountStar" Height="30" Width="30" VerticalAlignment="Top"/>
                        <TextBlock  Text=" Personalisierung    " FontWeight="Normal"  HorizontalAlignment="Left" VerticalAlignment="Top" Width="Auto" Margin="5,0" Background="Transparent" FontSize="20"  Foreground="White">
                        </TextBlock>
                    </StackPanel>
                </ListViewItem>
                <ListViewItem x:Name="NotificationSettingsItem" Style="{StaticResource ListViewItemStyle}" Width="Auto" Margin="0,30,0,0" HorizontalAlignment="Left" >
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" Margin="10, 0" Height="35">
                        <materialDesign:PackIcon Kind="BellNotification" Height="30" Width="30" VerticalAlignment="Center"/>
                        <TextBlock  Text=" Benachrichtigungen" FontWeight="Normal"  HorizontalAlignment="Left" Margin="5,0" VerticalAlignment="Center" Width="Auto"  Background="Transparent" FontSize="20"  Foreground="White">
                        </TextBlock>
                    </StackPanel>
                </ListViewItem>
                <ListViewItem x:Name="OtherItem" Style="{StaticResource ListViewItemStyle}" Width="Auto"  Margin="0,30,0,0" HorizontalAlignment="Left" >
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Left" Margin="10, 0" Height="35">
                        <materialDesign:PackIcon Kind="DotsHorizontalCircle" Height="30" Width="30" VerticalAlignment="Top"/>
                        <TextBlock  Text="Sonstiges               " FontWeight="Normal"  HorizontalAlignment="Left"  VerticalAlignment="Top" Width="Auto" Margin="5,0" Background="Transparent" FontSize="20"  Foreground="White">
                        </TextBlock>
                    </StackPanel>
                </ListViewItem>

            </ListView>
            <ListView  x:Name="MyAccountList" Background="{x:Null}" Visibility="Visible" Margin="50,20,0,0" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="8" Grid.RowSpan="8" BorderBrush="Transparent"  >
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon  Kind="Account" Height="55" Width="55" Foreground="LightGray"/>
                    <Rectangle Fill="Transparent" Width="20"/>
                    <TextBlock x:Name="MeinAccount" HorizontalAlignment="Left" Height="56" TextWrapping="Wrap" Text="Mein Account" VerticalAlignment="Top" Width="246" Foreground="White" FontSize="40"/>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Grid  Background="Transparent" Height="100" Margin="40,0,0,0"   HorizontalAlignment="Left"  VerticalAlignment="Bottom"  Panel.ZIndex="3">
                    <StackPanel Orientation="Horizontal">
                        <Ellipse Width="80" Height="80" VerticalAlignment="Bottom" Margin="0,8">
                            <Ellipse.Fill>
                                <ImageBrush x:Name="pictureCopy" Stretch="Fill" />
                            </Ellipse.Fill>
                        </Ellipse>
                        <Rectangle Width="10" Fill="Transparent"/>
                        <TextBlock x:Name="NameBlockCopy" Text="" Background="{x:Null}" Width="Auto"  FontSize="60" FontWeight="Light"  TextWrapping="Wrap" VerticalAlignment="Bottom" Foreground="White" Margin="0,0,0,8"/>
                    </StackPanel>
                </Grid>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Grid >
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <StackPanel>
                        <TextBox x:Name="StatusInfo" materialDesign:HintAssist.Hint="Info hinzufügen"  Foreground="WhiteSmoke" Style="{StaticResource MaterialDesignTextBox}" BorderBrush="LightGray"  MaxHeight="150" Width="460" Height="auto" TextWrapping="Wrap" FontSize="24" Margin="55, 0" TextChanged="StatusInfo_TextChanged"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10">
                            <Button x:Name="CancelInfoBtn" Visibility="Hidden" VerticalAlignment="Top" Style="{StaticResource MaterialDesignFlatButton}" Content="Abbrechen" Width="100" FontSize="12" Click="CancelInfoBtn_Click"  />
                            <Button x:Name="SaveInfoBtn" Visibility="Hidden" VerticalAlignment="Top" Style="{StaticResource MaterialDesignFlatButton}" Content="Speichern" Width="100" FontSize="12" Click="SaveInfoBtn_Click"  />
                        </StackPanel>
                    </StackPanel>
                </Grid>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="SetPictureTextBox" Text="Profilbild setzen" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="SetPictureText" Text="Setze Dein Profilbild. Hinweis: Solltest Du unverifiziert sein, ist dieser Knopf deaktiviert, um ihn zu aktivieren, beantrage eine Verifizierung imdem Du auf den Kreis drückst, wenn ein Häcken erscheint, dann wurde Deine Verifizierung beantragt. Wir benachrichtigen Dich sobald sie angenommen wird."  HorizontalAlignment="Left" Height="160" TextWrapping="Wrap" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Checkbox.xaml" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <Button x:Name="PictureButton" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Content="Profilbild" IsEnabled="False" HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="160" Click="PictureButton_Click" Background="#FF6E7379" Foreground="White" FontSize="18" FontWeight="Bold">

                    </Button>
                    <CheckBox x:Name="RequestVerification" Height="40" Width="40" Background="LightSkyBlue" Foreground="Black" BorderBrush="White"
  Content=""
  Style="{StaticResource MaterialDesignActionDarkCheckBox}"
   Click="RequestVerification_Click" ToolTip="Verifizerung beantragen. Mit einer akzeptieren Verifizierung kannst Du Dein Profilbild ändern."/>
                </StackPanel>

                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>


                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="ResetPictureTextBox"  Text="Profilbild zurücksetzen" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="ResetPictureText" Text="Du willst kein Profilbild mehr? Dann setze es einfach zurück!"  HorizontalAlignment="Left" Height="65" TextWrapping="Wrap" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button x:Name="DefaultPicture" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Foreground="White" Content="Profilbild zurücksetzen" HorizontalAlignment="Left" Height="45" Margin="40,0,0,0" VerticalAlignment="Top" Width="250" Background="#FF6E7379" FontSize="20" FontWeight="Bold" Click="DefaultPicture_Click">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>


                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="ChangeNameTextBox"  Text="Namen ändern" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="ChangeNameText"  Text="Hier kannst Du deinen Namen ändern, bitte bedenke jedoch, dass danach Dein Profilbild zurückgesetzt wird und das Du Deine Verifizierung neu beantragen musst!" TextWrapping="Wrap" HorizontalAlignment="Left" Height="100" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button x:Name="ChangeNameButton" Content="Namen ändern" Style="{DynamicResource MaterialDesignRaisedDarkButton}"  HorizontalAlignment="Left" Height="45" VerticalAlignment="Top" Width="193" Click="ChangeNameButton_Click" Background="#FF6E7379" FontSize="20" FontWeight="Bold" Margin="40, 0" Foreground="White" BorderBrush="{x:Null}">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock  x:Name="SendMsgsText"  HorizontalAlignment="Right" Margin="45,0" Height="Auto" TextWrapping="NoWrap" Text="Deine geschriebenen Nachrichten" VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25" FontWeight="Bold" />
                <TextBlock x:Name="SendMsgsCount"  HorizontalAlignment="Right" Margin="45,0" Height="Auto" TextWrapping="NoWrap" VerticalAlignment="Top" Width="Auto" Foreground="Aqua" FontSize="50" FontWeight="ExtraBold" TextDecorations="Underline" FontStyle="Italic"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="15"/>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListView>
            <ListView  x:Name="PersonalaziationList" Visibility="Collapsed" Margin="50,20,0,0" Background="{x:Null}" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="8" Grid.RowSpan="8" BorderBrush="Transparent"  >
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon x:Name="CustomIcon" Kind="AccountStar" Height="55" Width="55" Foreground="LightGray"/>
                    <Rectangle Fill="Transparent" Width="20"/>
                    <TextBlock x:Name="Personalisierung" HorizontalAlignment="Left" Height="55" TextWrapping="Wrap" Text="Personalisierung" VerticalAlignment="Top" Width="292" Foreground="White" FontSize="40"/>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="RefreshTimeTextBox"  Text="Aktualisierungszeit ändern" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="RefreshTimeText" Text="Die Aktualisierungszeit bestimmt nach wieviel Zeit (in Millisekunden) ,nach neuen Nachrichten, Aktiven/Abwesenden Nutzern, wer aktuell schreibt, geprüft wird. Hinweis: Diese Angabe gilt nur wenn die App aktiviert ist, nicht im Hintergrund." TextWrapping="Wrap" HorizontalAlignment="Left" Height="130" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button x:Name="changeTimer" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Content="Intervall ändern" HorizontalAlignment="Left" Height="45" Margin="40,0,0,0" VerticalAlignment="Top" Width="190" Click="ChangeTimer_Click" Background="#FF6E7379" Foreground="White" FontSize="20" FontWeight="Bold">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="ShortcutTextBox" Text="Verknüpfung erstellen" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="ShortcutText" Text="Erstelle eine Verknüpfung auf deinem Desktop mit einem Klick. Durch die Verknüpfung kannst Du Secret Chat sehr schnell starten und Dein Desktop wird ein bisschen mehr farbenfroh!" TextWrapping="Wrap" HorizontalAlignment="Left" Height="110" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button x:Name="ShortcutButton" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Content="Desktop Verknüpfung erstellen" HorizontalAlignment="Left" Height="45" Margin="40,00,0,0" VerticalAlignment="Top" Width="Auto" Click="ShortcutButton_Click" Background="#FF6E7379" Foreground="White" FontSize="20" FontWeight="Bold">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <StackPanel Orientation="Horizontal" Margin="40, 00">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <!--<modernWPF:ToggleSwitch>
                        
                    </modernWPF:ToggleSwitch>-->
                    <CheckBox  Name="Links" Click="Links_Click" VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}">
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
                                 Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>

                    </CheckBox>
                    <TextBlock x:Name="LinksText" HorizontalAlignment="Left" Height="45" TextWrapping="Wrap" VerticalAlignment="Top" Width="286" Foreground="White" FontSize="30"  Text="Warnungen bei Links"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="40,20, 0,0">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <CheckBox  Name="AutoStart" Click="AutoStart_Click" VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}">
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
                                  Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <TextBlock x:Name="AutostartText" HorizontalAlignment="Left" Height="45"  TextWrapping="Wrap" VerticalAlignment="Top" Width="277" Foreground="White" FontSize="30" Text="Autostart"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="40,20, 0,0">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <CheckBox  Name="Sounds" VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}" Click="Sounds_Click">
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
                                Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <TextBlock x:Name="SoundsText" HorizontalAlignment="Left" Height="45"  TextWrapping="Wrap" VerticalAlignment="Top" Width="277" Foreground="White" FontSize="30" Text="Geräusche"/>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <StackPanel Orientation="Horizontal" Margin="40, 00">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <CheckBox  Name="Emojis"  VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}" Click="Emojis_Click">
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
                                 Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>

                    </CheckBox>
                    <TextBlock x:Name="EmojisText" HorizontalAlignment="Left" Height="45" TextWrapping="Wrap" VerticalAlignment="Top" Width="428" Foreground="White" FontSize="30" Text="Kaomojis in Emojis umwandeln"/>
                </StackPanel>
                <!--<StackPanel Orientation="Horizontal" Margin="40,20, 0,0">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <CheckBox  Name="Reminder" VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}" Click="Reminder_Click">
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
                                Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <TextBlock x:Name="ReminderText" HorizontalAlignment="Left" Height="45"  TextWrapping="Wrap" VerticalAlignment="Top" Width="474" Foreground="White" FontSize="30" Text="Erinnerung zu Benachrichtigungen"/>
                </StackPanel>-->
                <StackPanel Orientation="Horizontal" Margin="40,20, 0,0">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <!--<Grid>
                        <Image x:Name="sun4LightTheme" Height="30" Width="30" Source="pack://application:,,,/SecretChat;component/resources/sun4LightTheme.png"/>
                        <Image Height="30" Width="30"  x:Name="sun" Source="pack://application:,,,/SecretChat;component/resources/mbrisun2_99594.png"  />
                    </Grid>-->
                    <CheckBox x:Name="ModeCheckbox" ToolTip="Zwischen Light- und Darkmode wechseln."  VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}"  Click="ButtonSettings_Click_2" >
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
                                Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <!--<Grid>
                    <Image Height="30" Width="30" x:Name="moon" Source="pack://application:,,,/SecretChat;component/resources/dark_mode_half_moon_icon_176153.png"  />
                    <Image x:Name="moon4LightTheme" Height="30" Width="30" Source="pack://application:,,,/SecretChat;component/resources/moon4LightTheme.png"/>
                    </Grid>-->
                    <TextBlock x:Name="ModeText" HorizontalAlignment="Left" Height="45"  TextWrapping="Wrap" VerticalAlignment="Top" Width="474" Foreground="White" FontSize="30" Text="Dark Mode"/>
                </StackPanel>

                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListView>
            <ListView  x:Name="NotificationSettingsList" Margin="50,20,0,0" Visibility="Collapsed" Background="{x:Null}" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="8"  Grid.RowSpan="8" BorderBrush="Transparent"  >
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon x:Name="NotificationIcon" Kind="BellNotification" Height="55" Width="55" Foreground="LightGray"/>
                    <Rectangle Fill="Transparent" Width="20"/>
                    <TextBlock x:Name="Notification" HorizontalAlignment="Left" Height="55" TextWrapping="Wrap" Text="Benachrichtigungen" VerticalAlignment="Top" Width="359" Foreground="White" FontSize="40"/>
                    <Button  VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonSettings_Click_5" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#FF2D2D30" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF333337" TargetName="Border" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <materialDesign:PackIcon x:Name="Info" Kind="InfoCircleOutline" Height="25" Width="25" Foreground="LightGray"/>
                    </Button>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="NotifcationText" Text="Wir informieren dich, wenn Du Nachrichten bekommst, dieses kannst Du aber Spezifischer einstellen." TextWrapping="Wrap" HorizontalAlignment="Left" Height="150" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="22"/>
                <StackPanel Orientation="Horizontal" Margin="40,0">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <CheckBox  x:Name="Benachrichtigungen" Click="Benachrichtigungen_Click" VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}" >
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
      Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <TextBlock x:Name="BenachrichtigungenText" HorizontalAlignment="Left" Height="45"  TextWrapping="Wrap" VerticalAlignment="Top" Width="357" Foreground="White" FontSize="30" Text="Alle Benachrichtigungen"/>
                    <Button  VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonSettings_Click_3" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#FF2D2D30" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF333337" TargetName="Border" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <materialDesign:PackIcon x:Name="Info1" Kind="InfoCircleOutline" Height="25" Width="25" Foreground="LightGray"/>
                    </Button>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <StackPanel Orientation="Horizontal" Margin="40,0">
                    <StackPanel.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <materialDesign:BundledTheme BaseTheme="Light" PrimaryColor="LightBlue" SecondaryColor="DeepPurple" />
                                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </StackPanel.Resources>
                    <CheckBox  x:Name="Mentions" Click="Mentions_Click" VerticalAlignment="Center" Height="10"  Width="25" Style="{StaticResource MaterialDesignSwitchToggleButton}" >
                        <materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                            <SolidColorBrush
      Color="Red" />
                        </materialDesign:ToggleButtonAssist.SwitchTrackOffBackground>
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <TextBlock x:Name="MentionsText" HorizontalAlignment="Left" Height="45"  TextWrapping="Wrap" VerticalAlignment="Top" Width="357" Foreground="White" FontSize="30" Text="Erwähnungen"/>
                    <Button  VerticalAlignment="Top" Background="{x:Null}" BorderBrush="{x:Null}" Click="ButtonSettings_Click_4" >
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#FF2D2D30" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="Border" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FF333337" TargetName="Border" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                        <materialDesign:PackIcon x:Name="Info2" Kind="InfoCircleOutline" Height="25" Width="25" Foreground="LightGray"/>
                    </Button>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListView>
            <ListView  x:Name="OtherList" Visibility="Collapsed" Margin="50,20,0,0" Background="{x:Null}" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="8" Grid.RowSpan="8" BorderBrush="Transparent"  >
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon  x:Name="DangerIcon" Kind="CarBrakeAlert" Height="55" Width="55" Foreground="LightGray" />
                    <Rectangle Fill="Transparent" Width="20"/>
                    <TextBlock x:Name="Gefahrenzone" HorizontalAlignment="Left" Height="55" TextWrapping="Wrap" Text="Gefahrenzone" VerticalAlignment="Top" Width="292" Foreground="White" FontSize="40"/>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="DeleteAccountTextBox" Text="Account löschen" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="DeleteAccountText" Text="Du möchtest nicht mehr Secret Chat? Dann kannst Du Dein Account einfach löschen. Achtung, alle Deine Nachrichten, Privat Chats, Dein Profilbild, Dein Status, Deine Personalisierungen und Secret Chat selber werden endgültig gelöscht!" TextWrapping="Wrap" HorizontalAlignment="Left" Height="140" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button Content="Account löschen" Margin="40, 0" Height="48" BorderThickness="0" Background="#FFE55E5E" BorderBrush="{x:Null}" Foreground="White" FontWeight="Bold" FontSize="20" Click="ButtonSettings_Click_1" Width="Auto" Style="{DynamicResource MaterialDesignRaisedDarkButton}">

                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <TextBlock x:Name="ExitSCTextBox" Text="Secret Chat beenden" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="ExitSCText" Text="Hier kannst Du Secret Chat komplett beenden, so endet auch der Hintergrund Task." TextWrapping="Wrap" HorizontalAlignment="Left" Height="50" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button x:Name="exitBtn" Margin="40, 20" Content="Beenden" HorizontalAlignment="Left" Height="45" VerticalAlignment="Top" BorderThickness="0" Width="Auto" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Background="#FFE55E5E" Foreground="White" FontSize="20" FontWeight="Bold" Click="ExitBtn_Click">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>

                <TextBlock x:Name="RestartSCTextBox" Text="Secret Chat neustarten" FontWeight="Bold"  HorizontalAlignment="Left" Height="45" Margin="40, 0"  VerticalAlignment="Top" Width="Auto" Foreground="White" FontSize="25"/>
                <TextBlock x:Name="RestartSCText" Text="Hier kannst Du Secret Chat komplett neustarten. Das hilft öfters bei Fehlern." TextWrapping="Wrap" HorizontalAlignment="Left" Height="50" Margin="40, 0"  VerticalAlignment="Top" Width="460" Foreground="White" FontSize="18"/>
                <Button x:Name="restartBtn" Margin="40, 20" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Content="Neustarten" BorderThickness="0" HorizontalAlignment="Left" Height="45" VerticalAlignment="Top" Width="Auto" Background="#FFE55E5E" Foreground="White" FontSize="20" FontWeight="Bold" Click="RestartBtn_Click">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon x:Name="InfoIcon" Kind="InformationOutline" Width="55" Height="55" Foreground="LightGray"/>
                    <Rectangle Fill="Transparent" Width="20"/>
                    <TextBlock x:Name="Informationen" HorizontalAlignment="Left" Height="55" TextWrapping="Wrap" VerticalAlignment="Top" Width="362" Foreground="White" FontSize="40"><Run Text="Infos"/><Run Text=" zu Secret Chat"/></TextBlock>
                </StackPanel>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>


                <Button x:Name="Credits" Content="Anerkennungen" HorizontalAlignment="Left" Height="45" Margin="40,0,0,0" VerticalAlignment="Top" Width="Auto" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Background="#FF6E7379" Foreground="White" FontSize="20" FontWeight="Bold" Click="Credits_Click">
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>

                <Button x:Name="SCProject" Style="{DynamicResource MaterialDesignRaisedDarkButton}" Content="Unsere Website" HorizontalAlignment="Left" Height="45" Margin="40,0,0,0" VerticalAlignment="Top" Width="Auto" Background="#FF6E7379" Foreground="White" FontSize="20" FontWeight="Bold" Click="SCProject_Click" >
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Button x:Name="Datenschutz" HorizontalAlignment="Left" Height="20" Margin="50,0,0,0" VerticalAlignment="Top" Width="117" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Datenschutz_Click" MouseEnter="Datenschutz_MouseEnter" MouseLeave="Datenschutz_MouseLeave">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent" TargetName="Border" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <TextBlock x:Name="DatenschutzerklärungTextBlock" Height="20" TextWrapping="Wrap" Text="Datenschutzerklärung" Width="124" TextDecorations="Underline" Foreground="#FF1D3DEE" Background="Transparent"/>
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>

                <Button x:Name="Nutzungsbedingungen"  Height="20" Margin="45,0,0,0" VerticalAlignment="Top" Width="132" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="Nutzungsbedingungen_Click" MouseEnter="Nutzungsbedingungen_MouseEnter" MouseLeave="Nutzungsbedingungen_MouseLeave">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Transparent" TargetName="Border" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <TextBlock x:Name="NutzungsbedingungenTextBlock" Height="17" TextWrapping="Wrap" Width="120" TextDecorations="Underline" Foreground="#FF1D3DEE" Background="Transparent" Text="Nutzungsbedinungen"/>
                </Button>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <Rectangle Fill="Transparent" Height="10"/>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="Border"  Padding="2" SnapsToDevicePixels="true" Background="Transparent">
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListView>
            <!--<Button x:Name="closeBtn" Content="×" FontSize="35" HorizontalAlignment="Left" Height="42" Margin="741,0,0,0" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Top" Width="41" Foreground="White" FontWeight="Bold" Click="CloseBtn_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#FF333337" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#FFDC3032" TargetName="Border" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>-->
            <Button x:Name="helpBtn" Content="?" FontSize="30" HorizontalAlignment="Right" Grid.Column="9"  Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Top" Width="67" Foreground="White" FontWeight="Bold" Click="HelpBtn_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="#FF333337" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{Binding HoverColor}" TargetName="Border" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>
            </Button>
        </Grid>
        <!--<Button Content="V" Grid.Column="8" HorizontalAlignment="Left" Height="33" Margin="30,10.286,0,0" Grid.Row="7" VerticalAlignment="Top" Width="32" Click="Button_Click_4"/>
        <Button Content="C" Grid.Column="9" HorizontalAlignment="Left" Height="33" Margin="30,10.286,0,0" Grid.Row="7" VerticalAlignment="Top" Width="32" Click="Button_Click_3"/>-->
    </Grid>

</Window>