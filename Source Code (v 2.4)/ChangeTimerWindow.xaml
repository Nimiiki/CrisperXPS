<Window x:Class="SecretChat.ChangeTimerWindow" Background="Transparent" AllowsTransparency="True"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:local="clr-namespace:SecretChat"
        mc:Ignorable="d"
        Title="ChangeTimerWindow" Height="450" Width="800" ResizeMode="NoResize" WindowStyle="None">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="Grid" Background="#F92D2D30" Margin="5,1,5,5">
        <Grid.Effect>
            <DropShadowEffect RenderingBias="Quality" Direction="315" ShadowDepth="1" BlurRadius="4" FrameworkElement.FlowDirection="RightToLeft"/>
        </Grid.Effect>
        <Button x:Name="closeBtn" Content="×" FontSize="35" HorizontalAlignment="Left" Height="42" Margin="748,0,0,0" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Top" Width="41" Foreground="White" FontWeight="Bold" Click="CloseBtn_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF333337" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFDC3032" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="helpBtn" Content="?" FontSize="30" HorizontalAlignment="Left" Height="47" Margin="703,0,0,0" Background="Transparent" BorderBrush="Transparent" VerticalAlignment="Top" Width="37" Foreground="White" FontWeight="Bold" Click="HelpBtn_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="#FF333337" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF57575D" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
        <TextBox x:Name="timerBox"   GotFocus="TimerBox_GotFocus"   materialDesign:HintAssist.Hint="Zeit in Millisekunden"   FontSize="40" Style="{StaticResource MaterialDesignFloatingHintTextBox}"  BorderThickness="2.5" HorizontalAlignment="Left" Height="78" Margin="182,210,0,0"  TextWrapping="Wrap" VerticalAlignment="Top" Width="388"  Background="#FF2D2D30" BorderBrush="#FF4C4C4F" Foreground="White"  TextAlignment="Left"
  materialDesign:TextFieldAssist.TextBoxViewMargin="1 0 1 0"
  materialDesign:HintAssist.FloatingScale="0.3" CaretBrush="#FF1B6DD8" />
        <TextBlock x:Name="Text" HorizontalAlignment="Left" Height="120" Margin="64,59,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="679" Foreground="#FFA1CBFF" FontSize="25"><Run Text="Gebe die Zeit (in Millisekunden) an um um den Intervall der "/><Run Text="A"/><Run Text="ktualisierung"/><Run Text=" zu ändern (200-1000 Millisekunden wird für normalen gebrauch empfohlen)."/></TextBlock>
        <Button x:Name="timerVertiffy" Content="Bestätigen" HorizontalAlignment="Center" Panel.ZIndex="1" Height="45" Margin="308,325,326,0" VerticalAlignment="Top" Width="156"  FontSize="30" Background="#FF1B6DD8" Foreground="White" Click="TimerVertiffy_Click" BorderBrush="{x:Null}" FontWeight="Bold">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </Style.Resources>
                    <Setter Property="Background" Value="#FF333337" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FF0E56B4" TargetName="Border" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
